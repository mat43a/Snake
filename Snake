struct Position
{
    public int row;
    public int col;
    public Position (int row, int col)
    {
        row = row;
        col = col; 
    }

    static void Main(string[] args)
    {
        Position[] directions = new Position[]
        {
            new Position (0, 1),
            new Position (0, -1),
            new Position (1, 0),
            new Position (-1, 0),
        };
        int direction = 0;

        Random rand = new Random ();
        Position food = new Position(rand.Next (0, Console.WindowHeight), rand.Next (0, Console.WindowWidth));
        
        Console.BufferHeight = Console.WindowHeight;

        Queue<Position> snakeElements = new Queue<Position>();
        for (int i = 0; i <= 5; i++)
        {
            snakeElements.Enqueue(new Position(0, i));
        }
        while (true)
        {
            if (Console.KeyAvailable)
            {
                ConsoleKeyInfo userInput = Console.ReadKey();
                if (userInput.Key == ConsoleKey.LeftArrow)
                {
                    direction = 1;
                }
                if (userInput.Key == ConsoleKey.RightArrow)
                {
                    direction = 0;
                }
                if (userInput.Key == ConsoleKey.UpArrow)
                {
                    direction = 3;
                }
                if (userInput.Key == ConsoleKey.DownArrow)
                {
                    direction = 2;
                }
            }

            Position snakeHaed = snakeElements.Last();
            Position nexDirection = directions[direction];
            Position snakeNewHead = new Position(snakeHaed.row + nexDirection.row, snakeHaed.col + nexDirection.col);
            snakeElements.Enqueue(snakeNewHead);

            if (snakeNewHead.col == food.col && snakeNewHead.row == food.row)
            {
                food = new Position(rand.Next(0, Console.WindowHeight), rand.Next(0, Console.WindowWidth));

            }
            else
            {
                snakeElements.Dequeue();
            }

            Console.Clear();

            foreach (Position position in snakeElements)
            {
                Console.SetCursorPosition(position.row, position.col);
                Console.WriteLine("*");
            }

            Console.SetCursorPosition(food.col, food.row);
            Console.WriteLine("@");

            Thread.Sleep(100);
        }
    }
}
